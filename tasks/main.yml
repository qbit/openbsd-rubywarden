---

- name: Install dependencies
  package:
    name: "{{ item }}"
    state: installed
  loop:
    - git
    - sqlite3

- name: Install Ruby
  package:
    name: ruby24-bundler
    state: installed
  when: ansible_distribution_version == "6.4"

- name: Install Ruby
  package:
    name: ruby25-bundler
    state: installed
  when: ansible_distribution_version == "6.5"

- name: add rubywarden group
  group:
    name: "{{ rw_group }}"
    state: present

- name: add rubywarden user
  user:
    name: "{{ rw_user }}"
    state: present
    home: "{{ rw_home }}"
    group: "{{ rw_group }}"
    append: yes

- name: remove rubywarden .ssh directory
  file:
    state: absent
    path: "{{ rw_home }}/.ssh"

- name: get rubywarden code
  register: git_updated
  git:
    repo: "https://github.com/jcs/rubywarden.git"
    dest: "{{ rw_src }}"
    version: "{{ rw_commit }}"

- name: run bundler
  bundler:
    executable: /usr/local/bin/bundle24
    gem_path: "{{ rw_home }}/rb"
    binstub_directory: "{{ rw_home }}/rb/bin"
    chdir: "{{ rw_src }}"
    state: present
  when: ansible_distribution_version == "6.4"

- name: run bundler
  bundler:
    executable: /usr/local/bin/bundle25
    gem_path: "{{ rw_home }}/rb"
    binstub_directory: "{{ rw_home }}/rb/bin"
    chdir: "{{ rw_src }}"
    state: present
  when: ansible_distribution_version == "6.5"

- name: make the {{ rw_env }} db dir
  file:
    path: "{{ rw_src }}/db/{{ rw_env }}"
    state: directory
    owner: "{{ rw_user }}"
    group: "{{ rw_group }}"
    recurse: yes
  register: migrate

- name: run db:migrate
  when: (git_updated.changed or migrate.changed) and (ansible_distribution_version == "6.4")
  command: "env RUBYWARDEN_ENV={{ rw_env }} bundle24 exec rake db:migrate"
  args:
    chdir: "{{ rw_src }}"

- name: run db:migrate
  when: (git_updated.changed or migrate.changed) and (ansible_distribution_version == "6.5")
  command: "env RUBYWARDEN_ENV={{ rw_env }} bundle25 exec rake db:migrate"
  args:
    chdir: "{{ rw_src }}"

- name: verify perms {{ rw_env }} db dir
  file:
    path: "{{ rw_src }}/db/{{ rw_env }}"
    state: directory
    owner: "{{ rw_user }}"
    group: "{{ rw_group }}"
    recurse: yes

- name: create rubywarden rc script
  register: rc_status
  template:
    src: rubywarden.j2
    dest: /etc/rc.d/rubywarden
    owner: root
    group: wheel
    mode: 755

- name: enable rubywarden on boot
  register: started
  service:
    name: rubywarden
    state: started
    enabled: True

- name: restart rubywarden
  when: git_updated.changed or (rc_status.changed and started.changed == False)
  service:
    name: rubywarden
    state: restarted
